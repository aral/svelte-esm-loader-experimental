/* generated by Svelte v3.41.0 */
import {
	SvelteComponent,
	append_hydration,
	children,
	claim_element,
	claim_text,
	detach,
	element,
	init,
	insert_hydration,
	noop,
	safe_not_equal,
	text
} from "/modules/svelte/internal";

function create_fragment(ctx) {
	let p;
	let strong;
	let t;

	return {
		c() {
			p = element("p");
			strong = element("strong");
			t = text("This is an inner component.");
		},
		l(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			strong = claim_element(p_nodes, "STRONG", {});
			var strong_nodes = children(strong);
			t = claim_text(strong_nodes, "This is an inner component.");
			strong_nodes.forEach(detach);
			p_nodes.forEach(detach);
		},
		m(target, anchor) {
			insert_hydration(target, p, anchor);
			append_hydration(p, strong);
			append_hydration(strong, t);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(p);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;